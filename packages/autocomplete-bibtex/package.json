{
  "_args": [
    [
      {
        "raw": "/private/var/folders/mm/gcm0y8zn2j7g93v4pcwwhqgr0000gn/T/d-11735-5016-datv1f/package.tgz",
        "scope": null,
        "escapedName": null,
        "name": null,
        "rawSpec": "/private/var/folders/mm/gcm0y8zn2j7g93v4pcwwhqgr0000gn/T/d-11735-5016-datv1f/package.tgz",
        "spec": "/private/var/folders/mm/gcm0y8zn2j7g93v4pcwwhqgr0000gn/T/d-11735-5016-datv1f/package.tgz",
        "type": "local"
      },
      "/private/var/folders/mm/gcm0y8zn2j7g93v4pcwwhqgr0000gn/T/apm-install-dir-11735-5016-4qy4nz"
    ]
  ],
  "_from": "../d-11735-5016-datv1f/package.tgz",
  "_id": "autocomplete-bibtex@0.7.0",
  "_inCache": true,
  "_installable": true,
  "_location": "/autocomplete-bibtex",
  "_phantomChildren": {},
  "_requested": {
    "raw": "/private/var/folders/mm/gcm0y8zn2j7g93v4pcwwhqgr0000gn/T/d-11735-5016-datv1f/package.tgz",
    "scope": null,
    "escapedName": null,
    "name": null,
    "rawSpec": "/private/var/folders/mm/gcm0y8zn2j7g93v4pcwwhqgr0000gn/T/d-11735-5016-datv1f/package.tgz",
    "spec": "/private/var/folders/mm/gcm0y8zn2j7g93v4pcwwhqgr0000gn/T/d-11735-5016-datv1f/package.tgz",
    "type": "local"
  },
  "_requiredBy": [
    "#USER"
  ],
  "_resolved": "file:../d-11735-5016-datv1f/package.tgz",
  "_shasum": "dc253d754c9d7f3eea772c9d67cbc1406fa6b9cd",
  "_shrinkwrap": null,
  "_spec": "/private/var/folders/mm/gcm0y8zn2j7g93v4pcwwhqgr0000gn/T/d-11735-5016-datv1f/package.tgz",
  "_where": "/private/var/folders/mm/gcm0y8zn2j7g93v4pcwwhqgr0000gn/T/apm-install-dir-11735-5016-4qy4nz",
  "author": {
    "name": "apcshields"
  },
  "bugs": {
    "url": "https://github.com/apcshields/autocomplete-bibtex/issues"
  },
  "dependencies": {
    "atom-space-pen-views": "^2.1.0",
    "fuzzaldrin": "~1.0.0",
    "xregexp": "^2.0.0",
    "yaml-js": "^0.1.3",
    "zotero-bibtex-parse": "git://github.com/apcshields/zotero-bibtex-parse.git#v1.2.0"
  },
  "description": "Uses Autocomplete+ to fill-in keys from bibtex, citeproc JSON, and citeproc YAML files.",
  "devDependencies": {},
  "engines": {
    "atom": ">=0.177.0"
  },
  "homepage": "https://github.com/apcshields/autocomplete-bibtex#readme",
  "license": "MIT",
  "main": "./lib/main",
  "name": "autocomplete-bibtex",
  "optionalDependencies": {},
  "providedServices": {
    "autocomplete.provider": {
      "versions": {
        "2.0.0": "provide"
      }
    }
  },
  "readme": "# autocomplete-bibtex package\n\nAdds citation key autocompletion to\n[autocomplete+](https://github.com/saschagehlich/autocomplete-plus) for\n[Atom](http://atom.io/).\n\n## Screenshot\n\n![screenshot](img/scrot.png)\n\n## Features\n\n- Uses `autocomplete-plus` API v.2\n- Sorts matches by score *then* by first author name\n- Gives contextual information (container, volume, URL) in the completion pane\n- Works on bibtex and citeproc format\n- Articles, books, chapters, ..., have different colors\n- Custom icon!\n\n## Installation\n\nYou can install autocomplete-bibtex using the Preferences pane.\n\n\n## Usage\n\n1. Add an array of the files you want to search for citation keys to\n  `config.cson`. Valid extensions are `bib`, `json`, and `yaml`.\n\n  ```coffeescript\n  'autocomplete-bibtex':\n    'references': [\n      '/path/to/references.bib'\n      '/path/to/references.json'\n    ]\n  ```\n\n  (For instructions about editing `config.cson`, check out the Atom\n  [documentation](https://atom.io/docs/latest/customizing-atom#advanced-configuration).)\n\n  If you prefer a graphical user interface, you can add edit the settings directly in `Packages - Settings View - Manage Packages - autocomplete-bibtex` as shown in the illustrated screenshot below:\n\n  ![](bibtex-settings.png)  \n\n2. By default, the autocomplete-bibtex package is configured to provide\n  suggestions in [scopes](https://atom.io/docs/latest/advanced/scopes-and-scope-descriptors)\n  which Atom recognizes as Markdown.\n\n3. In the document in which you want a citation, type '@' (the beginning of a\n  Pandoc citation) and then begin to type the family name of any of the authors\n  of the work you wish to cite. For instance, to cite\n\n  > Krijnen, J., Swierstra, D., & Viera, M. O. (2014). Expand: Towards an\n  > Extensible Pandoc System. In M. Flatt & H.-F. Guo (Eds.), Practical Aspects\n  > of Declarative Languages (pp. 200–215). Springer International Publishing.\n  > Retrieved from http://link.springer.com/chapter/10.1007/978-3-319-04132-2_14\n\n  type the beginning of `@krijnen`, `@swierstra`, or `@viera`. (The search is\n  not case sensitive, so `@Krijnen` or even `@KRIJNEN` will also work.)\n\n  A list of possible works will display as soon as you type `@` and will filter\n  as you continue to type. Select the work you desire from the list, hit `tab`\n  to autocomplete, and the citation will be added for you.\n\n  For instance, given a BibTeX entry like this\n\n  ```tex\n  @incollection{krijnen_expand_2014,\n  \tseries = {Lecture Notes in Computer Science},\n  \ttitle = {Expand: Towards an Extensible Pandoc System},\n  \tcopyright = {©2014 Springer International Publishing Switzerland},\n  \tisbn = {978-3-319-04131-5, 978-3-319-04132-2},\n  \tshorttitle = {Expand},\n  \turl = {http://link.springer.com/chapter/10.1007/978-3-319-04132-2_14},\n  \tabstract = {The Pandoc program is a versatile tool for converting between document formats. It comes with a great variety of readers, each converting a specific input format into the universal Pandoc format, and a great variety of writers, each mapping a document represented in this universal format onto a specific output format. Unfortunately the intermediate Pandoc format is fixed, which implies that a new, unforeseen document element cannot be added. In this paper we propose a more flexible approach, using our collection of Haskell libraries for constructing extensible parsers and attribute grammars. Both the parsing and the unparsing of a specific document can be constructed out of a collection of precompiled descriptions of document elements written in Haskell. This collection can be extended by any user, without having to touch existing code. The Haskell type system is used to enforce that each component is well defined, and to verify that the composition of a collection components is consistent, i.e. that features needed by a component have been defined by that component or any of the other components. In this way we can get back the flexibility e.g. offered by the packages in the {\\textbackslash}{LaTeX}{\\textbackslash}mbox\\{{\\textbackslash}{LaTeX}\\} package eco-system.},\n  \tlanguage = {en},\n  \tnumber = {8324},\n  \turldate = {2014-07-23},\n  \tbooktitle = {Practical Aspects of Declarative Languages},\n  \tpublisher = {Springer International Publishing},\n  \tauthor = {Krijnen, Jacco and Swierstra, Doaitse and Viera, Marcos O.},\n  \teditor = {Flatt, Matthew and Guo, Hai-Feng},\n  \tmonth = jan,\n  \tyear = {2014},\n  \tkeywords = {Attribute Grammars, Document Formatting, Haskell, Logics and Meanings of Programs, Pandoc, Parsing, Programming Languages, Compilers, Interpreters, Programming Techniques, Software Engineering, Type System},\n  \tpages = {200--215},\n  }\n  ```\n  typing `@krijnen` and hitting `tab` (assuming this is the only work by Krijnen\n  in the selected BibTeX files) would yield\n\n  ```markdown\n  @krijnen_expand_2014\n  ```\n\n### Custom citation formatting.\n\nAs of version 0.3.0, you can customize what autocomplete-bibtex inserts when you\nconfirm an autocomplete suggestion.\n\nBy default, autocomplete-bibtex inserts a\n[Pandoc-style](http://johnmacfarlane.net/pandoc/README.html#citations)\ncitation (e.g., `@krijnen_expand_2014` from the example above). However, if you\nprefer a different insertion, say a LaTeX footnote citation like\n`\\footfullcite{krijnen_expand_2014}`, you can adjust the `resultTemplate`\nconfiguration variable in the package preferences or add another key to\n`config.cson`.\n\n```coffeescript\n'autocomplete-bibtex':\n  'bibtex': [\n    '/path/to/references.bib'\n  ]\n  'resultTemplate': '\\footfullcite{[key]}'\n```\n\nAutocomplete-bibtex will replace the string `[key]` with the key of the BibTeX\nentry you select using the autocomplete feature.\n\nN.B. Even if you use a custom citation format, the autocompletion feature is\nstill triggered by typing `@` and then part of an author’s name.\n\n## Acknowledgements\n\nMany thanks to those few developers who work tirelessly to improve\n[autocomplete-plus](https://github.com/atom-community/autocomplete-plus).\nWithout their hard work and support, this package could not exist.\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/apcshields/autocomplete-bibtex.git"
  },
  "version": "0.7.0"
}
